const ArticlesData = [
    {
        id: 1,
        date: 'January 12, 2021',
        title: 'The Oracle Problem',
        categories: ['Cryptography', 'Oracles', 'Programming'],
        image: 'chainlink.jpg',
        headline: 'Linking Reality and Temporal',
        textOne: ['The Oracle Problem is, at it’s core, the problem of interpolating real world data into data that can be understood and manipulated by decentralized networks in a manner that doesn’t sacrifice any benefit of decentralization. Blockchains are inherently self-contained, meaning they have no access to information outside of the scope of the ledger. While blockchains have enormous industrial potential, utilization of “on-chain” data is limited, as any information required for a smart contract to work would have to be hardcoded or added to said chain manually in a standard format. Understanding the applications of oracles to decentralized networks is important, yet inherently more difficult without first understanding some of the underlying actors. This article serves to provide a simplified overview of the important moving engineering and theory based parts within oracle networks, and assumes a basic knowledge of distributed ledgers and smart contracts.'],
        blockquote: {
            text: "Imagine the ideal protocol. It would have the most trustworthy third party imaginable — a deity who is on everybody’s side. All the parties would send their inputs to God. God would reliably determine the results and return the outputs. God being the ultimate in confessional discretion, no party would learn anything more about the other parties’ inputs than they could learn from their own inputs and the output. Alas, in the our temporal world we deal with humans rather than deities. Yet, too often we are forced to treat people in a nearly theological manner, because our infrastructure lacks the security needed to protect ourselves.",
            author: 'Nick Szabo (1997)'
        },
        textTwo: ["This problem, as first described by Nick Szabo in the late 90’s, has been almost entirely conceptually solved, although from a technical standpoint implementation is proving difficult. An oracle is meant to act as a bridge between on-chain and off-chain datasets while simultaneously ensuring the validity of provided inputs. Oracles allow this real world data (ex. flight booking rates, stock prices, etc.) to effect on-chain functions. Generally these are conceptualized as transactions, but as smart contracts don’t rely on transaction based requests in theory, just know these “functions” are real world tasks, executed by a program once some condition is met." , "The job of the oracle is to take some variable from anywhere that has data, the price of a stock for example, and show it to whichever smart contracts depend upon it. The arbitration of the smart contract is not handled by the oracle, but as the oracle is responsible for providing one or more deciding variables it must verify the accuracy of the data in a trustless manner to satiate the security requirements of the network. It is additionally important that said data can be manipulated without necessarily making it transparent to the entire network. As many smart contracts will hypothetically depend upon private data to function, tax records for example, the issue becomes one of decentralizing source data that is not decentralized, verifying it amongst the network and providing correct outputs without sacrificing the privacy of any parties involved. Imagine a scenario where the IRS begins using blockchains to process tax returns, with the intended benefit being that refunds and remittances could be sent, received, verified, and updated nearly instantaneously.", "Here, it is important to understand the differences between an API (Application Programming Interface) and the oracle itself. The oracle is concerned with the trustless verification of the data, while the API’s are the engine under the hood. API’s are little packages of code that function as middlemen between middlemen to translate for unrelated languages that would otherwise not know how to function together. API’s receive a “fetch” command from the oracle, and retrieve the data from some source. The Oracle then takes that translated information, verifies it’s correctness, and passes the values on to the smart contract for arbitration.", "A vast library of API’s would be apart of such a network, used and added by developers and companies to allow their data to “talk” to the oracle. For example, a Coinbase API might translate your buy and sell records from their servers into a useful stream of data the oracle can understand. The oracle takes said data, achieves a consensus, verifies it, then passes the now trustless data on to the smart contract for arbitration and delegation. Assume my Coinbase records were the only tax record I needed to file. I would export the database of my transactions, give it to the oracle, which would interpolate and decentralize before passing the information on to the smart contract. The smart contract is the point that determines whether or not I will receive a refund. If so; the contract will automatically pay me said refund out to an Ethereum wallet. However, I don’t want a complete record of all my cryptocurrency based transactions to be available to any oracle. This presents a challenging problem wherein all nodes must be able to examine the data in order to verify it. If they are unable to do so, the data will be seen as centralized, and never get past the oracle to the smart contract for arbitration. Decentralized networks and applications are deliberately designed to rely on a plethora of sources or diverse nodes to prevent any single point of failure from destroying the network. Sacrificing decentralization for privacy presents a damning problem for smart contracts and deFi as a whole.", "Consider a function for generating random numbers for an on-chain lottery. The numbers are fetched using a Random.org API, fed through the oracle, and into the smart contract that awards the lottery winnings. If someone with access to the source code of Random.org influenced the output number, they could effectively pre-determine a transaction on the blockchain. Designing a smart contract that cannot be verified by multiple sources sacrifices any of the benefits of decentralization. While the utility of automation is still valuable; creating a smart contract to automate a task that does not benefit from decentralization becomes unnecessarily complex and may even depreciate security. That said, the entire Blockchain ecosystem is reliant on scalability and adoption, and 99% of useful (profitable) data is located in the real world, often from a single source. Real world institutions use a liability or “swiss cheese” model, where many influential institutions (ex. the federal govt.) rely on interconnectedness to prevent that single point of failure.", "Within decentralized models, using liability is a key part of network design, but centralized co-liability is generally considered too insecure for ensuring the correctness of data. I.e. the endorsement of a data’s validity by the government for example, would not hold up to the security requirements of smart contracts. Again, relying on a central institution to be liable for the verification of data breaks the security model of dApps or Smart Contracts.", "Understanding malicious actors is a somewhat trivial concept for traditional blockchain systems. This is because grasping the consensus mechanisms is easier to do. PoW (proof of work) is currently the most commonly used consensus algorithm. Miners are rewarded for making calculations in an underlying asset, while malicious actors providing incorrect information do not have enough hashing power to successfully preform a 51% attack on most PoW networks. This is due to the high computational and energy requirements, alongside the necessity of extreme amounts of luck to keep ahead of ALL other miners. Many detractors of bitcoin have pointed to the fact that China controls on average 71% of the global hashrate, with the US being not second, but third on the global rankings with only 5.29% global h/R for 2019-2020. Many government officials have falsely asserted it is a communist controlled currency, used only for criminal activities. However, for a working 51% attack, Chinese governments would have to seize millions of miners, audit the code to purposely provide malicious data (all malicious miners would need to act in conjunction with each other) and successfully re-deploy them without anybody noticing. Then, these miners would have to successfully outstrip the other 49% of miners every single block for, conceivably, the rest of time or until the stolen coins were able to be withdrawn on exchanges. Once even a single block was found by a good miner, ahead of the malicious ones, the entire blockchain would be reverted back to it’s initial state. The core idea of PoW is that the effort, cost and energy of preforming a malicious attack far outweighs any reward for doing so, and distribution as well as decentralization insure this as nearly impossible.", "Proof of Work is not without fault; it has a high degree of energy consumption, produces much noise and heat, depends on increasing valuation of the underlying asset, influences markets, and has a high degree of e-waste associated with it. That said, it is still far faster, more efficient and cheaper than transporting gold or even fiat currency.", "The second most popular consensus mechanism is Proof of Stake. I will not detail the inner workings of PoS here, but it revolves around the concept of purchasing liability from the network via “staking” or locking the underlying asset into a funds pool that is used to cover the mistakes of bad nodes. The main issue with PoS is that it transfers power of delegation back to the most wealthy within the network. Whales would have exponentially more influence over the network than on PoW. PoS is convenient as it does not require miners, thus negating the vast majority of energy costs. A popular idea is to use PoS in conjunction with PoW to ensure equitable decentralization, while reducing energy costs.", "Oracles also need a means of achieving consensus between nodes, although the methodology is slightly different. Where chains like Bitcoin allow every miner to verify every transaction at any time, proposed solutions to the oracle problem allow for partial distribution and full decentralization. Chainlink, the industry leader in tackling the oracle problem, has engineered a generalized heterogenous framework where nodes compete for work, but specialize in certain tasks; not dissimilar to capitalist economies. Chainlink also allows users to specify the attributes such as data source, aggregation strategy and collateral amounts, all the way down to node reputation rankings, where you can choose only to accept data from the most trustworthy nodes (presumably more expensive) or less trustworthy nodes (cheaper). This allows smart contract developers to not only customize the speed of a transaction, but associate trust levels, differing transaction costs, and network pathing to attributes within the contract to provide more customizability for users.", "Sergey Nazarov, CEO & Founder of Chainlink describes this alongside implicit and explicit staking requirements in a very “defense contract” esq. manner in a tweet from Jann 7, 2021.", "Essentially, he asserts that nearly every variable within the specification of data delivery for a contract can be set by the end user. High reward contracts need to also be high risk to weight proper incentive. Therefore, a high security contract can specify that an explicit stake be added by the operator."
                    , "This approach to consensus does not solve the entire problem however. With on-chain data, nothing is subjective. With real world data, for example “What is the weather in California?”, a wide range of technically correct answers can be provided. This question of subjectivity presents issues deriving from which data source you choose to select. One node may provide weather data for Santa Monica, CA as “sunny” while another node several miles away might submit “rainy”. Both answers may be correct, but as the outputs are different, achieving a consensus becomes difficult, especially when the bad node needs to be penalized. This problem has no definitively correct solution yet, other than a high level of specificity." , "Additionally, when users of the oracles need to pay a transaction fee to every node, simple tasks such as retrieving a random number become exceedingly expensive and would require that every node be versed in every blockchain. Under the heterogeneous model designed by Chainlink, some nodes can specialize their jobs not only based on the source material, but are chain agnostic, or able to provide data in a format based on the blockchain’s security requirements (private/public, consensus method…). The ability for Chainlink oracles to communicate across unassociated chains means previously inaccessible data can begin to become available for analysis and can be provided with a secure link between different chains.", "Having a sort of “social score” for oracles is necessitated by the need for trustworthy data. Since all oracles that provide data must sign the transaction with their keys, malicious oracles can be tracked and penalized for providing incorrect or partially incorrect data feeds. Chainlink executes this in conjunction with the underlying token ($LINK) by forcing node operators to forfeit a portion of their owned tokens to the network to cover the cost of calling the bad data, and even pay for a re-call. Under this model, the LINK token becomes not simply the native token, but a form of insurance for all users and operators. Bad operators are de-incentivized by their reputation score and staked balance, while consistently trustworthy nodes can be compensated and receive a bump in “trustworthiness” ratings. The cryptographical signing of each data stream adds a layer of Sybil resistance and prevents previously irrational nodes from creating a new identity to reset trust statistics.", "This innovative architecture enforces good behavior, allows for profitable compensation, holds all involved parties liable, and commoditizes the service instead of a single entity. Developers will be able to add extensive API libraries to their oracles, and depending on their personal infrastructure would be able to provide services for all or just a few of these API’s. Differing security levels allow high op-sec. data to be managed only through nodes that have been audited or run on trusted hardware (e.g., Intel SGX), or via unaudited nodes based on user specification. The unfortunate downside to this approach is the consistent attention that is required of operators. Running a node is not necessarily a passive income stream, as managing API’s, data feed updates, and promoting your node as a business are all required for success. Obtaining a security audit will also be extremely difficult in the early stages of oracle provisions as effective auditors are rare to come by, expensive, and often have to audit each new revision made to a node. In theory- security auditing could eventually be done programmatically, but at present this is not an option.", "While Chainlink is not the only oracle provider, it is the largest and best documented at this time. While other solutions such as ZAP are rapidly becoming available, the preliminary testing results exist in exceedingly small amounts this early, and it is hard to tell whether they will experience the same adoption as other, more popular options. That said; competition has acted as a catalyst for innovation before. Chainlink has a splendid reputation, and a plethora of blockchain and private business partners actively working to bring oracle integration to fruition.", "This article fails to cover verifiable randomness, off chain computation and the abstraction layers of Chainlink as a service, since those topics deserve their own article each. Nevertheless, they enable a diverse selection of possibilities for financial and non-financial use cases including lending and borrowing, derivatives, zero slippage trading, credit default swaps, parametric insurance for unexpected real-world events, NFT ecosystems and more.", "Working oracles that lower the barrier of usage and conceptualization are essential for commercial adoption of cryptocurrency or deFi applications. Without projects such as Chainlink and Zap, adoption will ultimately fall flat in any utilitarian nature, and cryptocurrency will be relegated to the fringes of investing."],
        tags: ['ChainLink']
    },
    {
        id: 2,
        date: 'May 5, 2021',
        title: 'Public Keys',
        categories: ['PGP'],
        image: '',
        headline: 'PGP Key',
        textOne: ["-----BEGIN PGP PUBLIC KEY BLOCK----- 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 bu7sA+pTnfQseuDD/okYCSQ= =IzX+ -----END PGP PUBLIC KEY BLOCK-----"],
        blockquote: {
            text: "",
            author: ''
        },
        textTwo: [],
        tags: ['PGP']
    },
    
]

export default ArticlesData